####################################################################################################

##       #### ########  ########     ###    ########  #### ########  ######  
##        ##  ##     ## ##     ##   ## ##   ##     ##  ##  ##       ##    ## 
##        ##  ##     ## ##     ##  ##   ##  ##     ##  ##  ##       ##       
##        ##  ########  ########  ##     ## ########   ##  ######    ######  
##        ##  ##     ## ##   ##   ######### ##   ##    ##  ##             ## 
##        ##  ##     ## ##    ##  ##     ## ##    ##   ##  ##       ##    ## 
######## #### ########  ##     ## ##     ## ##     ## #### ########  ######

####################################################################################################

import torch

####################################################################################################

 ######  ##          ###     ######   ######  ########  ######  
##    ## ##         ## ##   ##    ## ##    ## ##       ##    ## 
##       ##        ##   ##  ##       ##       ##       ##       
##       ##       ##     ##  ######   ######  ######    ######  
##       ##       #########       ##       ## ##             ## 
##    ## ##       ##     ## ##    ## ##    ## ##       ##    ## 
 ######  ######## ##     ##  ######   ######  ########  ######

####################################################################################################
        
class ConvolutionalNeuralNetwork(torch.nn.Module):
#
### Initialize
#
    def __init__(self):
        super(ConvolutionalNeuralNetwork, self).__init__()

        self.convolution_layer = torch.nn.Sequential(
            torch.nn.Conv2d(in_channels=, out_channels=, kernel_size=, stride=, padding=, padding_mode="zeros"),
            torch.nn.BatchNorm2d(num_features=),
            torch.nn.ReLU()
            )
#
### Forward pass
#
    def forward(self, x):

        return x

####################################################################################################

##     ##  #######  ########  ##     ## ##       ########  ######  
###   ### ##     ## ##     ## ##     ## ##       ##       ##    ## 
#### #### ##     ## ##     ## ##     ## ##       ##       ##       
## ### ## ##     ## ##     ## ##     ## ##       ######    ######  
##     ## ##     ## ##     ## ##     ## ##       ##             ## 
##     ## ##     ## ##     ## ##     ## ##       ##       ##    ## 
##     ##  #######  ########   #######  ######## ########  ######

####################################################################################################



####################################################################################################
